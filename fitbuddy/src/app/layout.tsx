import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}


// 'use client';
// import "./globals.css";


// import { useEffect, useState } from 'react';


// export default function RootLayout({
//     children,
// }: Readonly<{
//     children: React.ReactNode;
// }>) {

// const [isDarkMode, setIsDarkMode] = useState(false);

//   useEffect(() => {
//     // Check localStorage
//     const theme = localStorage.getItem('theme');
//     const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;

//     if (theme === 'dark' || (!theme && prefersDark)) {
//       document.documentElement.classList.add('dark');
//       setIsDarkMode(true);
//     } else {
//       document.documentElement.classList.remove('dark');
//       setIsDarkMode(false);
//     }
//   }, []);

//   const toggleTheme = () => {
//     const isDark = document.documentElement.classList.toggle('dark');
//     localStorage.setItem('theme', isDark ? 'dark' : 'light');
//     setIsDarkMode(isDark);
//   };


//     return (
//         <html lang="en">
//             <body>
                
//                 {children}
//             </body>
//         </html>
//     );
// }





